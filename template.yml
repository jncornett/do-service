Transform: AWS::Serverless-2016-10-31
Resources:
  ApiEndpointFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: ./dist
      Events:
        GraphQlGet:
          Type: Api
          Properties:
            Path: /graphql
            Method: GET
            RestApiId: !Ref: GraphQlApi
        GraphQlPost:
          Type: Api
          Properties:
            Path: /graphql
            Method: POST
            RestApiId: !Ref: GraphQlApi

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: DoUserPool

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: DoApp
      GenerateSecret: false
      UserPoolId: !Ref: CognitorUserPool

  GraphQlApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "2018-02-10T17:20:00Z"
          title: DoAppGraphQlApi
          basePath: /api
          schemes: [ https ]
          definitions:
            Empty:
              type: "object"
              title: "Empty Schema"
          securityDefinitions:
            myApiUsers:
              type: "apiKey"
              name: "Authorization"
              in: "header"
              x-amazon-apigateway-authtype: "cognito_user_pools"
              x-amazon-apigateway-authorizer:
                providerARNS:
                - Fn::Sub: ${CognitoUserPool.Arn}
                type: "cognito_user_pools"
          paths:
            /graphql:
              get:
                consumes: [ application/json ]
                produces: [ application/json ]
                responses:
                  "200":
                    description: "200 response"
                    schema:
                      $ref: "#/definitions/Empty"
                    headers:
                      Access-Control-Allow-Origin:
                        type: "string"
                security:
                - myApiUsers: []
                x-amazon-api-gateway-integration:
                  responses:
                    default:
                      statusCode: "200"
                      responseParameters:
                        method.response.header.Access-Control-Allow-Origin: "'*'"
                  uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-3-31/functions/${ApiEndpointFunction.Arn}/invocations
                  passthroughBehavior: "when_no_templates"
                  httpMethod: "POST"
                  contentHandling: "CONVERT_TO_TEXT"
                  type: "aws"
              post:
                consumes: [ application/json ]
                produces: [ application/json ]
                responses:
                  "200":
                    description: "200 response"
                    schema:
                      $ref: "#/definitions/Empty"
                    headers:
                      Access-Control-Allow-Origin:
                        type: "string"
                security:
                - myApiUsers: []
                x-amazon-api-gateway-integration:
                  responses:
                    default:
                      statusCode: "200"
                      responseParameters:
                        method.response.header.Access-Control-Allow-Origin: "'*'"
                  uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-3-31/functions/${ApiEndpointFunction.Arn}/invocations
                  passthroughBehavior: "when_no_templates"
                  httpMethod: "POST"
                  contentHandling: "CONVERT_TO_TEXT"
                  type: "aws"
              options:
                consumes: [ application/json ]
                produces: [ application/json ]
                responses:
                  "200":
                    description: "200 response"
                    schema:
                      $ref: "#/definitions/Empty"
                    headers:
                      Access-Control-Allow-Origin:
                        type: "string"
                      Access-Control-Allow-Methods:
                        type: "string"
                      Access-Control-Allow-Headers:
                        type: "string"
                x-amazon-api-gateway-integration:
                  responses:
                    default:
                      statusCode: "200"
                      responseParameters:
                        method.response.header.Access-Control-Allow-Methods: "'POST,GET,OPTIONS'"
                        method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                        method.response.header.Access-Control-Allow-Origin: "'*'"
                  requestTemplates:
                    application/json: "{\"statusCode\": 200}"
                  passthroughBehavior: "when_no_match"
                  type: "mock"
